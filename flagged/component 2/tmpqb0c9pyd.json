[[null, "<p>\u6b22\u8fce\u4f7f\u7528 langchain-ChatGLM Web UI\uff01</p></p>\n<p>\u8bf7\u5728\u53f3\u4fa7\u5207\u6362\u6a21\u5f0f\uff0c\u76ee\u524d\u652f\u6301\u76f4\u63a5\u4e0e LLM \u6a21\u578b\u5bf9\u8bdd\u6216\u57fa\u4e8e\u672c\u5730\u77e5\u8bc6\u5e93\u95ee\u7b54\u3002</p>\n<p>\u77e5\u8bc6\u5e93\u95ee\u7b54\u6a21\u5f0f\uff0c\u9009\u62e9\u77e5\u8bc6\u5e93\u540d\u79f0\u540e\uff0c\u5373\u53ef\u5f00\u59cb\u95ee\u7b54\uff0c\u5f53\u524d\u77e5\u8bc6\u5e93\u65b0\u5efa\u77e5\u8bc6\u5e93\uff0c\u5982\u6709\u9700\u8981\u53ef\u4ee5\u5728\u9009\u62e9\u77e5\u8bc6\u5e93\u540d\u79f0\u540e\u4e0a\u4f20\u6587\u4ef6/\u6587\u4ef6\u5939\u81f3\u77e5\u8bc6\u5e93\u3002</p>\n<p>\u77e5\u8bc6\u5e93\u6682\u4e0d\u652f\u6301\u6587\u4ef6\u5220\u9664\uff0c\u8be5\u529f\u80fd\u5c06\u5728\u540e\u7eed\u7248\u672c\u4e2d\u63a8\u51fa\u3002"], [null, "\u6a21\u578b\u5df2\u6210\u529f\u52a0\u8f7d\uff0c\u53ef\u4ee5\u5f00\u59cb\u5bf9\u8bdd\uff0c\u6216\u4ece\u53f3\u4fa7\u9009\u62e9\u6a21\u5f0f\u540e\u5f00\u59cb\u5bf9\u8bdd"], [null, "\u5df2\u52a0\u8f7d\u77e5\u8bc6\u5e93samples\uff0c\u8bf7\u5f00\u59cb\u63d0\u95ee"], ["\u4f60\u8c01\u554a\uff1f", "\u6211\u662f\u4e00\u4e2a\u540d\u4e3a ChatGLM2-6B \u7684\u4eba\u5de5\u667a\u80fd\u52a9\u624b\uff0c\u662f\u57fa\u4e8e\u6e05\u534e\u5927\u5b66 KEG \u5b9e\u9a8c\u5ba4\u548c\u667a\u8c31 AI \u516c\u53f8\u4e8e 2023 \u5e74\u5171\u540c\u8bad\u7ec3\u7684\u8bed\u8a00\u6a21\u578b\u5f00\u53d1\u7684\u3002\u6211\u7684\u4efb\u52a1\u662f\u9488\u5bf9\u7528\u6237\u7684\u95ee\u9898\u548c\u8981\u6c42\u63d0\u4f9b\u9002\u5f53\u7684\u7b54\u590d\u548c\u652f\u6301\u3002"], ["\u4f60\u72e0\u62fd\u54e6", "\u62b1\u6b49\uff0c\u6211\u7684\u56de\u7b54\u6ca1\u6709\u95ee\u9898\u3002\u5982\u679c\u60a8\u6709\u5176\u4ed6\u95ee\u9898\uff0c\u8bf7\u968f\u65f6\u544a\u8bc9\u6211\u3002"], ["\u5509\u6211\u53bb\uff01", "\u60a8\u597d\uff0c\u6709\u4ec0\u4e48\u95ee\u9898\u6211\u53ef\u4ee5\u5e2e\u52a9\u60a8\u89e3\u7b54\u5417\uff1f"], ["\u5c0fBK \uff0c\u80fd\u597d\u597d\u5520\u55d1\u4e0d\uff1f", "\u6211\u662f\u4e00\u4e2a\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u6ca1\u6709\u60c5\u611f\u548c\u611f\u89c9\uff0c\u53ea\u80fd\u901a\u8fc7\u7b97\u6cd5\u548c\u8bed\u8a00\u6a21\u578b\u6765\u56de\u7b54\u60a8\u7684\u95ee\u9898\u3002\u4f46\u662f\uff0c\u6211\u4f1a\u5c3d\u529b\u5e2e\u52a9\u60a8\u89e3\u7b54\u95ee\u9898\u3002\u8bf7\u95ee\u6709\u4ec0\u4e48\u6211\u53ef\u4ee5\u5e2e\u52a9\u60a8\u89e3\u7b54\u7684\u5417\uff1f"], ["\u4f60\u4f1a\u6572\u4ee3\u7801\u4e0d\uff1f", "\u6211\u4e0d\u4f1a\u6572\u4ee3\u7801\uff0c\u56e0\u4e3a\u6211\u662f\u4e00\u4e2a\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u4e5f\u6ca1\u6709\u60c5\u611f\u548c\u611f\u89c9\u3002\u6211\u7684\u4e3b\u8981\u76ee\u7684\u662f\u901a\u8fc7\u7b97\u6cd5\u548c\u8bed\u8a00\u6a21\u578b\u6765\u56de\u7b54\u60a8\u7684\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u6572\u4ee3\u7801\u3002\u5982\u679c\u60a8\u6709\u5173\u4e8e\u7f16\u7a0b\u6216\u5176\u4ed6\u6280\u672f\u65b9\u9762\u7684\u95ee\u9898\uff0c\u6211\u4f1a\u5c3d\u529b\u5e2e\u52a9\u60a8\u3002"], ["\u751f\u6210\u4e00\u6bb5\u8d2a\u5403\u86c7\u6e38\u620f\u7684\u4ee3\u7801", "\u5f88\u62b1\u6b49\uff0c\u7531\u4e8e\u6211\u662f\u4e00\u4e2a\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u6211\u65e0\u6cd5\u751f\u6210\u5b9e\u9645\u7684\u4ee3\u7801\u3002\u4f46\u662f\uff0c\u6211\u53ef\u4ee5\u4e3a\u60a8\u63d0\u4f9b\u4e00\u4e2a\u57fa\u4e8ePython\u7684\u7b80\u5355\u8d2a\u5403\u86c7\u6e38\u620f\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fdb\u884c\u4fee\u6539\u548c\u6269\u5c55\u3002\n\n```python\nimport pygame\nimport random\n\n# \u6e38\u620f\u754c\u9762\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\nWINDOW_WIDTH = 600\nWINDOW_HEIGHT = 600\n\n# \u5b9a\u4e49\u86c7\u7684\u989c\u8272\u548c\u5927\u5c0f\nSNAKE_COLOR = (0, 255, 0)\nSNAKE_SIZE = 10\n\n# \u5b9a\u4e49\u98df\u7269\u7684\u989c\u8272\u548c\u5927\u5c0f\nFOOD_COLOR = (255, 0, 0)\nFOOD_SIZE = 10\n\n# \u521d\u59cb\u5316 Pygame \u5e93\npygame.init()\n\n# \u521b\u5efa\u6e38\u620f\u754c\u9762\nwindow = pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT))\n\n# \u8bbe\u7f6e\u6e38\u620f\u754c\u9762\u7684\u6807\u9898\npygame.display.set_caption(\"\u8d2a\u5403\u86c7\u6e38\u620f\")\n\n# \u521b\u5efa\u4e00\u4e2a\u65f6\u949f\u5bf9\u8c61\nclock = pygame.time.Clock()\n\n# \u5b9a\u4e49\u86c7\u7c7b\nclass Snake:\n    def __init__(self):\n        self.x = WINDOW_WIDTH // 2\n        self.y = WINDOW_HEIGHT // 2\n        self.body = [(self.x, self.y), (self.x - SNAKE_SIZE, self.y), (self.x - 2 * SNAKE_SIZE, self.y)]\n        self.direction = \"RIGHT\"\n\n    def draw(self):\n        for x, y in self.body:\n            pygame.draw.rect(window, SNAKE_COLOR, (x, y, SNAKE_SIZE, SNAKE_SIZE))\n\n    def move(self):\n        if self.direction == \"RIGHT\":\n            self.x += SNAKE_SIZE\n        elif self.direction == \"LEFT\":\n            self.x -= SNAKE_SIZE\n        elif self.direction == \"UP\":\n            self.y -= SNAKE_SIZE\n        elif self.direction == \"DOWN\":\n            self.y += SNAKE_SIZE\n\n        self.body.insert(0, (self.x, self.y))\n        self.body.pop()\n\n        self.x = self.x in self.body[0]:\n        self.y = self.y in self.body[0]:\n\n        if self.x == 0 and self.y == 0:\n            self.body.append(self.x, self.y)\n            self.direction = \"RIGHT\"\n        elif self.x == WINDOW_WIDTH - SNAKE_SIZE and self.y == 0:\n            self.body.append(self.x, self.y)\n            self.direction = \"LEFT\"\n        elif self.x == 0 and self.y == WINDOW_HEIGHT - SNAKE_SIZE:\n            self.body.append(self.x, self.y)\n            self.direction = \"UP\"\n        elif self.x == SNAKE_SIZE and self.y == 0:\n            self.body.append(self.x, self.y)\n            self.direction = \"DOWN\"\n\n        self.body.sort()\n\n    def grow(self):\n        self.body.append(self.x, self.y)\n\n\n# \u5b9a\u4e49\u98df\u7269\u7c7b\nclass Food:\n    def __init__(self):\n        self.x = random.randint(0, WINDOW_WIDTH - FOOD_SIZE)\n        self.y = random.randint(0, WINDOW_HEIGHT - FOOD_SIZE)\n\n    def draw(self):\n        pygame.draw.rect(window, FOOD_COLOR, (self.x, self.y, FOOD_SIZE, FOOD_SIZE))\n\n    def eat(self, snake):\n        if self.x == snake.x and self.y == snake.y:\n            snake.grow()\n            return True\n        return False\n\n\n# \u521b\u5efa\u4e00\u4e2a\u86c7\u5bf9\u8c61\u548c\u98df\u7269\u5bf9\u8c61\nsnake = Snake()\nfood = Food()\n\n# \u6e38\u620f\u5faa\u73af\nrunning = True\nwhile running:\n    # \u5904\u7406\u6e38\u620f\u4e8b\u4ef6\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            running = False\n        elif event.type == pygame.KEYDOWN:\n            if event.key == pygame.K_LEFT:\n                snake.direction = \"LEFT\"\n            elif event.key == pygame.K_RIGHT:\n                snake.direction = \"RIGHT\"\n            elif event.key == pygame.K_UP:\n                snake.direction = \"UP\"\n            elif event.key == pygame.K_DOWN:\n                snake.direction = \"DOWN\"\n\n    # \u8ba9\u6e38\u620f\u6709\u4e00\u4e2a\u5e27\u901f\u7387\n    clock.tick(10)\n\n    # \u5224\u65ad\u86c7\u662f\u5426\u5403\u5230\u4e86\u98df\u7269\n    if food.eat(snake):\n        food = Food()\n        snake.grow()\n\n    # \u7ed8\u5236\u80cc\u666f\n    window.fill((0, 0, 0))\n\n    # \u7ed8\u5236\u98df\u7269\n    food.draw()\n\n    # \u7ed8\u5236\u86c7\n    snake.move()\n    snake.draw()\n    if snake.body[0][0] == 0:\n        snake.body.append(snake.body[0])\n\n    # \u66f4\u65b0\u754c\u9762\n    pygame.display.update()\n\n# \u5173\u95ed Pygame\npygame.quit()\n```\n\n\u8bf7\u6ce8\u610f\uff0c\u6b64\u4ee3\u7801\u4ec5\u7528\u4e8e\u5b66\u4e60\u76ee\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u7f16\u5199\u4e00\u4e2a\u5b8c\u6574\u7684\u8d2a\u5403\u86c7\u6e38\u620f\u9700\u8981\u66f4\u591a\u7684\u4ee3\u7801\u548c\u6280\u672f\uff0c\u800c\u4e14\u9700\u8981\u4e86\u89e3\u5982\u4f55\u5904\u7406\u7528\u6237\u8f93\u5165\u548c\u79fb\u52a8\u86c7\u4ee5\u53ca\u98df\u7269\u3002"]]